[{"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\index.js":"1","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\App.js":"2","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\reportWebVitals.js":"3","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\LoginPage.jsx":"4","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\LandingPage.jsx":"5","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CustomerListPage.jsx":"6","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\components\\CustomerListItem.jsx":"7","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CustomerDetailPage.jsx":"8","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CreateCustomerPage.jsx":"9","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\UpdateCustomerPage.jsx":"10","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\index.js":"11","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\App.js":"12","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CreateCustomerPage.jsx":"13","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CustomerDetailPage.jsx":"14","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\LoginPage.jsx":"15","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CustomerListPage.jsx":"16","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\UpdateCustomerPage.jsx":"17","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\components\\CustomerListItem.jsx":"18","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\contexts\\CustomerContext.js":"19","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\styles\\ProjectStyles.jsx":"20","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\components\\UserInformation.jsx":"21"},{"size":632,"mtime":1610307138408,"results":"22","hashOfConfig":"23"},{"size":962,"mtime":1610366363579,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1826,"mtime":1610366179005,"results":"26","hashOfConfig":"23"},{"size":388,"mtime":1610307324424,"results":"27","hashOfConfig":"23"},{"size":1085,"mtime":1610322824138,"results":"28","hashOfConfig":"23"},{"size":324,"mtime":1610321217484,"results":"29","hashOfConfig":"23"},{"size":2794,"mtime":1610364998896,"results":"30","hashOfConfig":"23"},{"size":2965,"mtime":1610365269874,"results":"31","hashOfConfig":"23"},{"size":2384,"mtime":1610365490128,"results":"32","hashOfConfig":"23"},{"size":342,"mtime":1636113891112,"results":"33","hashOfConfig":"34"},{"size":982,"mtime":1610819510950,"results":"35","hashOfConfig":"34"},{"size":3120,"mtime":1610899054207,"results":"36","hashOfConfig":"34"},{"size":3261,"mtime":1610838702672,"results":"37","hashOfConfig":"34"},{"size":2609,"mtime":1610839240575,"results":"38","hashOfConfig":"34"},{"size":1283,"mtime":1610845033989,"results":"39","hashOfConfig":"34"},{"size":2929,"mtime":1610839164330,"results":"40","hashOfConfig":"34"},{"size":451,"mtime":1610830156435,"results":"41","hashOfConfig":"34"},{"size":1698,"mtime":1610830175791,"results":"42","hashOfConfig":"34"},{"size":1311,"mtime":1610838656124,"results":"43","hashOfConfig":"34"},{"size":1083,"mtime":1610840724314,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"hmbd19",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"w7ugkx",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\index.js",[],["97","98"],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\App.js",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\reportWebVitals.js",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\LoginPage.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\LandingPage.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CustomerListPage.jsx",["99"],"import React,{ useState,useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport CustomerListItem from '../components/CustomerListItem'\r\n\r\nexport default function CustomerListPage() {\r\n    const [customerList,setCustomerList]=useState([])\r\n    const url = \"https://frebi.willandskill.eu/api/v1/customers/\"\r\n    const token=localStorage.getItem(\"WEBB20\")\r\n\r\n    useEffect(()=>{\r\n        fetch(url,{\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=> {\r\n            console.log(data.results)\r\n            setCustomerList(data.results)\r\n        })\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            {customerList.map((customer)=>{\r\n                return <CustomerListItem key={customer.id} {...customer} />\r\n            })}\r\n\r\n            <button>\r\n                <Link to=\"/create\">\r\n                    Create a new customer\r\n                </Link>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\components\\CustomerListItem.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CustomerDetailPage.jsx",["100"],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\CreateCustomerPage.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_uppgift_crud_jwt\\src\\pages\\UpdateCustomerPage.jsx",["101"],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\index.js",[],["102","103"],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\App.js",["104"],"import React, {useState} from 'react'\nimport { Switch,Route } from 'react-router-dom'\nimport CreateCustomerPage from './pages/CreateCustomerPage'\nimport CustomerDetailPage from './pages/CustomerDetailPage'\nimport CustomerListPage from './pages/CustomerListPage'\nimport LoginPage from './pages/LoginPage'\nimport UpdateCustomerPage from './pages/UpdateCustomerPage'\nimport { CustomerProvider } from './contexts/CustomerContext'\n\nexport default function App() {\n  \n  return (\n    <div>  \n    <CustomerProvider>\n      <Switch>  \n          <Route path=\"/customers/:id/edit\" component={UpdateCustomerPage} />\n          <Route path=\"/customers/:id\" component={CustomerDetailPage} />  \n          <Route path=\"/customers\">\n            <CustomerListPage />\n          </Route>\n          <Route path=\"/create\">\n            <CreateCustomerPage />\n          </Route>  \n        <Route path=\"/\">\n          <LoginPage />\n        </Route>  \n      </Switch>\n      </CustomerProvider>\n    </div>\n  )\n}\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CreateCustomerPage.jsx",["105","106"],"import React, { useState,useContext} from 'react'\r\nimport UserInformation from '../components/UserInformation'\r\nimport { CustomerContext } from '../contexts/CustomerContext'\r\nimport { ButtonStyled, HeadingStyled, InputStyled} from '../styles/ProjectStyles'\r\n\r\nexport default function CreateCustomerPage() {\r\n    const [createCustomer,setCreateCustomer]=useState({})\r\n    const {history,setCustomerList, customerList,getItem}=useContext(CustomerContext) \r\n    function renderInput(name, label, type) {\r\n      return (\r\n        <div className=\"m-2 col-md-12 align-self-center\">\r\n          <label className=\"w-25\"htmlFor={name}>{label}</label>\r\n          <InputStyled\r\n            type={type || \"text\"} \r\n            name={name} \r\n            onChange={handleOnChange}\r\n            id={name} \r\n          />\r\n          <br/>\r\n        </div>\r\n      )\r\n    }\r\n    const handleOnChange=((e)=>{\r\n      setCreateCustomer({...createCustomer,[e.target.name]:e.target.value})\r\n    \r\n    })\r\n    const handleOnSubmit= ((e)=>{\r\n      e.preventDefault()\r\n      console.log(e.target.vatNr.value)\r\n      if(validateVat(e.target.vatNr.value)===true){\r\n      const url = \"https://frebi.willandskill.eu/api/v1/customers/\"\r\n      const token=localStorage.getItem(\"User\")\r\n      fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(createCustomer),\r\n      headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n      }\r\n      })\r\n      .then( res => res.json())\r\n      .then( data => {\r\n        setCustomerList([...customerList,data])\r\n        // getItem()\r\n        //context variable updated here but not required?\r\n         //push to /customers fetches data again within useEffect and thus updates page from backend\r\n          history.push('/customers')\r\n      })\r\n    }\r\n  \r\n    })\r\n    function validateVat(value){\r\n      let vatNr=value.trim()\r\n      let letters=vatNr.slice(0,2)\r\n      let digits=vatNr.slice(2,13)\r\n      if(letters==\"SE\" && digits.length===10 && !isNaN(digits)) return true\r\n      else{ \r\n        alert(\"Vat Number should be in format SE followed by 10 digits without any space or special characters\")\r\n      return false\r\n      } \r\n\r\n    }\r\n    return (<>\r\n      <UserInformation />\r\n      <HeadingStyled >Let's create a new customer</HeadingStyled>\r\n        <div className=\"container\">\r\n          <form className=\"row\" onSubmit={handleOnSubmit}>\r\n              {renderInput(\"name\", \"Customer Name\")}\r\n              {renderInput(\"organisationNr\", \"Organisation Number\")}\r\n              {renderInput(\"vatNr\", \"Vat Number\")}\r\n              {renderInput(\"reference\", \"Reference\")}\r\n              {renderInput(\"paymentTerm\", \"Payment Term\", \"number\")}\r\n              {renderInput(\"website\", \"Website\", \"url\")}\r\n              {renderInput(\"email\", \"Customer Email\", \"email\")}\r\n              {renderInput(\"phoneNumber\", \"Phone Number\", \"tel\")}   \r\n              <ButtonStyled className=\"col-md-6 m-5\" type=\"submit\">Create Customer</ButtonStyled>\r\n          </form>\r\n          <code>{JSON.stringify(createCustomer)}</code>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CustomerDetailPage.jsx",["107"],"import React, { useEffect,useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport UserInformation from '../components/UserInformation';\r\nimport { CustomerContext } from '../contexts/CustomerContext';\r\nimport { ButtonStyled, HeadingStyled,TableStyled,DeleteButton } from '../styles/ProjectStyles';\r\n\r\nexport default function CustomerDetailPage(props) {\r\n     const {customerList,setCustomerList,customerItem,setCustomerItem,history}=useContext(CustomerContext)\r\n    const customerId=props.match.params.id\r\n  \r\n    const url=`https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n    const token=localStorage.getItem(\"User\");\r\n    useEffect(()=>{\r\n        fetch(url, {\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n    .then(resp=>resp.json())\r\n    .then(data=>{\r\n        console.log(data)\r\n        setCustomerItem(data)})\r\n    },[])\r\n    function deleteCustomer(){\r\n    // const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n    // const token = localStorage.getItem(\"User\")\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(()=>{\r\n        const new_list = customerList.filter(item => item.id !== customerItem.id)\r\n        setCustomerList(new_list)\r\n        //filter and update customer list-added fetch in customerList page, so no point in filter here if already push to customers?\r\n        history.push('/customers')\r\n    })\r\n  }  \r\n    return (\r\n        <>\r\n        <UserInformation />\r\n         {customerItem && (<>\r\n        <HeadingStyled>Details about customer- {customerItem.name}</HeadingStyled>     \r\n        <TableStyled>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Organisation Number</td>\r\n                    <td>{customerItem.organisationNr}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>VAT Number</td>\r\n                    <td>{customerItem.vatNr}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Reference</td>\r\n                    <td>{customerItem.reference}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Payment Term</td>\r\n                    <td>{customerItem.paymentTerm}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Website</td>\r\n                    <td>{customerItem.website}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>\r\n\r\n                        {customerItem.email}\r\n\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone Number</td>\r\n                    <td>{customerItem.phoneNumber}</td>\r\n                </tr>\r\n            \r\n            </tbody>\r\n        </TableStyled>\r\n        <div className=\"d-flex justify-content-center \">\r\n        <DeleteButton onClick={deleteCustomer}>Delete Customer</DeleteButton>\r\n        <ButtonStyled className=\"ml-5\"><Link  className=\"text-dark\" to={`/customers/${customerId}/edit`}>Edit Customer</Link> </ButtonStyled>\r\n         </div>\r\n         </>)}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\LoginPage.jsx",["108"],"import React, { useState,useContext} from 'react'\r\nimport { FiLogIn} from 'react-icons/fi'\r\nimport { ButtonStyled, DivStyled, HeadingStyled, InputStyled } from '../styles/ProjectStyles'\r\nimport { CustomerContext } from '../contexts/CustomerContext'\r\n\r\n\r\nexport default function LoginPage() {\r\n      const {history,setUserInfo}=useContext(CustomerContext) \r\n        const [formData,setFormData]=useState({\r\n        email:\"Deepthi.Ushus@yh.nackademin.se\",\r\n        password: \"javascriptoramverk\"\r\n    })\r\n    function handleOnSubmit(e){\r\n        e.preventDefault()\r\n        const url=\"https://frebi.willandskill.eu/api-token-auth/\"\r\n        const payload={\r\n            email:formData.email,\r\n            password:formData.password\r\n        }\r\n        fetch(url,{\r\n            method:\"POST\",\r\n            body:JSON.stringify(payload),\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(resp=> resp.json())\r\n        .then(data=>{\r\n            localStorage.setItem(\"User\",data.token)\r\n           getUserInfo()\r\n            history.push('/customers')\r\n        })    \r\n    }\r\n   \r\n    function handleOnChange(e){\r\n        setFormData({...formData, [e.target.name]:e.target.value})\r\n        console.log(formData)\r\n    }\r\n     function getUserInfo(){\r\n        const token=localStorage.getItem(\"User\")\r\n    fetch(\"https://frebi.willandskill.eu/api/v1/me/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setUserInfo(data)})\r\n    }\r\n    return (\r\n        <div className=\"w-25 mx-auto mt-10\">\r\n            <HeadingStyled>Login page</HeadingStyled>\r\n           <div className=\"text-center\"><FiLogIn  /></div> \r\n            <form onSubmit={handleOnSubmit} >\r\n                <label htmlFor=\"email\">Email</label>\r\n                <InputStyled secondary\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleOnChange}/>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <InputStyled secondary\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleOnChange}/>\r\n                <ButtonStyled className=\"w-100 mt-3\" type=\"submit\">Login</ButtonStyled>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\CustomerListPage.jsx",["109"],"import React,{ useEffect,useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport CustomerListItem from '../components/CustomerListItem'\r\nimport UserInformation from '../components/UserInformation'\r\nimport {CustomerContext} from '../contexts/CustomerContext'\r\nimport { ButtonStyled, HeadingStyled } from '../styles/ProjectStyles'\r\n\r\nexport default function CustomerListPage() {\r\n    const {customerList,getItem}=useContext(CustomerContext)  \r\n    useEffect(()=>{\r\n        getItem()\r\n        console.log(\"hello. How are you there!!!\")\r\n    },[])\r\n    return (\r\n       <>\r\n            <UserInformation />\r\n            <HeadingStyled >List of Customers</HeadingStyled>\r\n            <div className=\"container\">\r\n             <div className=\"row\">\r\n            {customerList && customerList.map((customer)=>{\r\n                return  <CustomerListItem key={customer.id} {...customer} />     \r\n            })}\r\n                </div>\r\n            <div className=\"row justify-content-center m-3\">\r\n                <ButtonStyled >\r\n                    <Link className=\"text-dark\" to=\"/create\">\r\n                        Create a new customer\r\n                    </Link>\r\n                </ButtonStyled>\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\pages\\UpdateCustomerPage.jsx",["110"],"import React, {useEffect,useContext } from 'react'\r\nimport {useHistory }from 'react-router-dom'\r\nimport UserInformation from '../components/UserInformation'\r\nimport { CustomerContext } from '../contexts/CustomerContext'\r\nimport { ButtonStyled, HeadingStyled, InputStyled, TableStyled } from '../styles/ProjectStyles'\r\nexport default function UpdateCustomerPage(props) {\r\n    const customerId = props.match.params.id\r\n    const history=useHistory()\r\n    const {customerDetail,setCustomerDetail}=useContext(CustomerContext)\r\n  function getCustomerItem() {\r\n    const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n    const token = localStorage.getItem(\"User\")\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        console.log(data)\r\n        setCustomerDetail(data)\r\n    })\r\n  }\r\n\r\n  useEffect( () => {\r\n    getCustomerItem()\r\n  }, [])\r\n\r\n  function handleOnChange(e) {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    const newObj = {...customerDetail, [name]: value}\r\n    setCustomerDetail(newObj)\r\n  }\r\n\r\n  function renderInput(name, label, type) {\r\n    return (\r\n      <tr>\r\n       <td> <label htmlFor={name}>{label}</label></td>\r\n        <td><InputStyled secondary\r\n          type={type || \"text\"} \r\n          name={name}\r\n          value={customerDetail[name] || \"\"}\r\n          id={name}\r\n          onChange={handleOnChange}\r\n        /></td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault()\r\n    const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n    const token = localStorage.getItem(\"User\")\r\n    fetch(url, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(customerDetail),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => {console.log(data)\r\n     history.push(`/customers/${customerId}`)})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <UserInformation />\r\n      <HeadingStyled>Update Customer</HeadingStyled>\r\n      <form onSubmit={handleOnSubmit}>\r\n        <TableStyled>\r\n          <tbody>\r\n            {renderInput(\"name\", \"Customer Name\")}\r\n            {renderInput(\"organisationNr\", \"Organisation Number\")}\r\n            {renderInput(\"vatNr\", \"Vat Number\")}\r\n            {renderInput(\"reference\", \"Reference\")}\r\n            {renderInput(\"paymentTerm\", \"Payment Term\", \"number\")}\r\n            {renderInput(\"website\", \"Website\", \"url\")}\r\n            {renderInput(\"email\", \"Customer Email\", \"email\")}\r\n            {renderInput(\"phoneNumber\", \"Phone Number\", \"tel\")} \r\n        </tbody>\r\n        </TableStyled>\r\n        <ButtonStyled className=\"mx-auto\" type=\"submit\">Update Customer</ButtonStyled>\r\n        \r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\components\\CustomerListItem.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\contexts\\CustomerContext.js",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\styles\\ProjectStyles.jsx",[],"C:\\Users\\ushus\\Desktop\\Deepthi\\frontend3\\Project\\individual_task_crm\\src\\components\\UserInformation.jsx",[],["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":22,"column":7,"nodeType":"119","endLine":22,"endColumn":9,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":22,"column":7,"nodeType":"119","endLine":22,"endColumn":9,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":26,"column":6,"nodeType":"119","endLine":26,"endColumn":8,"suggestions":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":8,"column":50,"nodeType":"129","messageId":"130","endLine":8,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":56,"column":17,"nodeType":"134","messageId":"135","endLine":56,"endColumn":19},{"ruleId":"117","severity":1,"message":"136","line":24,"column":7,"nodeType":"119","endLine":24,"endColumn":9,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"138","line":3,"column":24,"nodeType":"129","messageId":"130","endLine":3,"endColumn":33},{"ruleId":"117","severity":1,"message":"139","line":13,"column":7,"nodeType":"119","endLine":13,"endColumn":9,"suggestions":"140"},{"ruleId":"117","severity":1,"message":"123","line":28,"column":6,"nodeType":"119","endLine":28,"endColumn":8,"suggestions":"141"},{"ruleId":"113","replacedBy":"142"},{"ruleId":"115","replacedBy":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has missing dependencies: 'token' and 'url'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'getCustomerItem'. Either include it or remove the dependency array.",["148"],["144"],["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getItem' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'setCustomerItem', 'token', and 'url'. Either include them or remove the dependency array.",["149"],"'DivStyled' is defined but never used.","React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.",["150"],["151"],["144"],["145"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"156","fix":"162"},"Update the dependencies array to be: [token]",{"range":"163","text":"164"},"Update the dependencies array to be: [token, url]",{"range":"165","text":"166"},"Update the dependencies array to be: [getCustomerItem]",{"range":"167","text":"168"},"Update the dependencies array to be: [setCustomerItem, token, url]",{"range":"169","text":"170"},"Update the dependencies array to be: [getItem]",{"range":"171","text":"172"},{"range":"173","text":"168"},[728,730],"[token]",[719,721],"[token, url]",[753,755],"[getCustomerItem]",[945,947],"[setCustomerItem, token, url]",[559,561],"[getItem]",[1002,1004]]